- var isMyStatus = login && (me.id == status.userId)

div.status.article(
		class                   = status.isRepostToStatus ? 'repost' : 'normal'
		lang                    = status.user.lang
		title                   = status.displayCreatedAt
		itemscope
		itemtype                = 'http://schema.org/BlogPosting'
		data-status-url         = config.url + '/' + status.user.screenName + '/status/' + status.id
		data-status-id          = status.id
		data-repost-source-id   = status.isRepostToStatus ? status.source.id : null
		data-id                 = status.id
		data-created-at         = status.createdAt
		data-cursor             = status.cursor
		data-timeline-cursor    = status.isRepostToStatus ? status.source.cursor : status.cursor
		data-repost-cursor      = status.isRepostToStatus ? status.cursor : null
		data-source-id          = status.isRepostToStatus ? status.id : null
		data-text               = status.text
		data-user-id            = status.user.id
		data-user-screen-name   = status.user.screenName
		data-user-name          = status.user.name
		data-user-color         = status.user.color
		data-user-verified     != status.user.isVerified.toString()
		data-is-reply          != status.isReply.toString()
		data-is-talk           != (status.moreTalk != null).toString()
		data-is-favorited      != login ? status.isFavorited.toString() : null
		data-is-reposted       != login ? status.isReposted.toString() : null
		data-is-repostpost     != status.isRepostToStatus.toString()
		data-repost-by-user-id != status.isRepostToStatus ? status.repostedByUser.id : null
		data-display-html-is-active='false')
	article(role='article')
		if login
			div.repost-form
				div.background
				form.form
					h2
						i.fa.fa-retweet
						| この投稿をRepostしますか？
					article(role='article')
						a.icon-anchor(href=config.url + '/' + status.user.screenName, title= status.user.comment != null ? status.user.comment : '@' + status.user.screenName, rel='icon')
							img.icon(src=status.user.iconImageUrl, alt='icon')
						header.header
							h3
								a.user-name(href=config.url + '/' + status.user.screenName, target='_blank', rel='author')= status.user.name
							if status.user.isVerified
								img.verified-icon(src='/resources/images/verified.png', alt='verified', title='認証済み')
							span.screen-name= '@' + status.user.screenName
							a(href=config.url + '/' + status.user.screenName + '/status/' + status.id, itemprop='url'): time(datetime=status.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= status.createdAt
						div.main(itemprop='articleBody')
							div.text
								p!= (status.isReply ? '<a href="' + config.url + '/' + status.user.screenName + '/status/' + status.inReplyToStatusId + '" class="reply"><i class="fa fa-reply"></i></a>' : '') + textParser(status.text)
							div.tag
								if status.tag != null
									ol(itemprop='keywords')
										each tag in status.tag
											li= tag
							if status.isImageAttached
								img.image(src=status.imageUrls[0], alt='image', itemprop='image')
					div.comment-form
						img.me-icon(src=me.iconImageUrl, alt='icon')
						input(type='text', name='text', placeholder='Repostにコメントを付ける')
					div.actions
						button.accept(type='submit')
							i.fa.fa-check
							p Repost
						button.cancel(type='button')
							i.fa.fa-ban
							p キャンセル

		section.main
		
			if status.isReply && status.replySource.isReply
				button.read-talk(role='button')
					i.fa.fa-ellipsis-v
			
			if status.isReply
				aside.reply-source(title!= '#{status.replySource.createdAt}&#x0A;'
						data-id= status.replySource.id
						data-user-id= status.replySource.user.id
						data-user-color= status.replySource.user.color
						data-user-verified!= status.replySource.user.isVerified.toString())
					article
						div.icon-area
							a.icon-anchor(href=config.url + '/' + status.replySource.user.screenName, title= status.replySource.user.comment != null ? status.replySource.user.comment : '@' + status.replySource.user.screenName, rel='icon')
								img.icon(src=status.replySource.user.iconImageUrl, alt='icon')
						div.main
							header.header
								h2.name
									a(href=config.url + '/' + status.replySource.user.screenName, target='_blank')= status.replySource.user.name
								if status.replySource.user.isVerified
									img.verified-icon(src='/resources/images/verified.png', alt='verified', title='認証済み')
								p.screen-name= '@' + status.replySource.user.screenName
								p.created-at
									a.time-anchor(href=config.url + '/' + status.replySource.user.screenName + '/status/' + status.replySource.id, itemprop='url')
										time(datetime=status.replySource.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= status.replySource.createdAt
							div.content
								div.text
									p!= (status.replySource.isReply ? '<a href="' + config.url + '/' + status.replySource.user.screenName + '/status/' + status.replySource.inReplyToStatusId + '" class="reply"><i class="fa fa-reply"></i></a>' : '') + textParser(status.replySource.text)
								if status.replySource.isImageAttached
									img.image(src=status.replySource.imageUrls[0], alt='image')
			
			if status.isRepostToStatus
				section.repost-information
					p.info
						a.icon-anchor(href=config.url + '/' + status.repostedByUser.screenName, title= status.repostedByUser.comment != null ? status.repostedByUser.comment : '@' + status.repostedByUser.screenName)
							img.icon(src=status.repostedByUser.iconImageUrl, alt='icon')
						span.text
							i.fa.fa-retweet
							| Reposted by 
							a.name(href=config.url + '/' + status.repostedByUser.screenName, target='_blank')= status.repostedByUser.name
					if status.source.text != null && status.source.text != ''
						article
							div.text
								p!= textParser(status.source.text)
							if status.source.isImageAttached
								img.image(src=status.source.imageUrls[0], alt='image', itemprop='image')
			
			section.main
				header.header
					div.icon-area
						a.icon-anchor(href=config.url + '/' + status.user.screenName, title= status.user.comment != null ? status.user.comment : '@' + status.user.screenName, rel='icon')
							img.icon(src=status.user.iconImageUrl, alt='icon')
					div.main
						div.top
							div.left
								div.author
									h1.name
										a.user-name(href=config.url + '/' + status.user.screenName, target='_blank', rel='author')= status.user.name
									if status.user.isVerified
										img.verified-icon(src='/resources/images/verified.png', alt='verified', title='認証済み')
									p.screen-name= '@' + status.user.screenName
							div.right
								if status.app != null
									p.via
										a.via-anchor
											span.caption via
											b.app-name= status.app.name
								p.created-at
									a.time-anchor(href=config.url + '/' + status.user.screenName + '/status/' + status.id, itemprop='url')
										time(datetime=status.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= status.createdAt
						div.bottom
							p.comment= status.user.comment
				
				div.content
					div.text
						p!= (status.isReply ? '<a href="' + config.url + '/' + status.user.screenName + '/status/' + status.inReplyToStatusId + '" class="reply"><i class="fa fa-reply"></i></a>' : '') + textParser(status.text)
					div.tag
						if status.tag != null
							ol(itemprop='keywords')
								each tag in status.tag
									li= tag
					if status.isImageAttached
						div.attached-images
							ol.images
								each imageUrl in status.imageUrls
									li.image(data-is-expanded='false')
										div.background
										button.expand(title='大きく', role='button')
											i.fa.fa-expand
										img.image(src=imageUrl, alt='image', itemprop='image')
				footer.footer
					if login
						if isMyStatus
							ul.actions
								li.reply
									button.reply-button(title='返信', role='button')
										i.fa.fa-reply
									a(href=config.url + '/' + status.user.screenName + '/status/' + status.id).count= status.repliesCount != 0 ? status.repliesCount : ''
								li.repost
									button.repost-button(title= status.isReposted ? 'Repostを取り消し' : 'Repost', role='button', disabled)
										i.fa.fa-retweet
									a(href=config.url + '/' + status.user.screenName + '/status/' + status.id + '/reposts').count= status.repostsCount != 0 ? status.repostsCount : ''
								li.favorite
									button.favorite-button(title= status.isFavorited ? 'お気に入り解除' : 'お気に入り', role='button')
										i.fa.fa-star
									a(href=config.url + '/' + status.user.screenName + '/status/' + status.id + '/favorites').count= status.favoritesCount != 0 ? status.favoritesCount : ''
								li.delete
									button.delete-button(title='削除', role='button')
										i.fa.fa-trash-o
								li.pin
									button.pin-button(title='ピン留め', role='button')
										i.fa.fa-thumb-tack
						else
							ul.actions
								li.reply
									button.reply-button(title='返信', role='button')
										i.fa.fa-reply
									a(href=config.url + '/' + status.user.screenName + '/status/' + status.id).count= status.repliesCount != 0 ? status.repliesCount : ''
								li.repost
									button.repost-button(title= status.isReposted ? 'Repostを取り消し' : 'Repost', role='button')
										i.fa.fa-retweet
									a(href=config.url + '/' + status.user.screenName + '/status/' + status.id + '/reposts').count= status.repostsCount != 0 ? status.repostsCount : ''
								li.favorite
									button.favorite-button(title= status.isFavorited ? 'お気に入り解除' : 'お気に入り', role='button')
										i.fa.fa-star
									a(href=config.url + '/' + status.user.screenName + '/status/' + status.id + '/favorites').count= status.favoritesCount != 0 ? status.favoritesCount : ''
			
			if status.stargazers != null && status.stargazers.length > 0
				section.stargazers
					ol.stargazers
						each stargazer in status.stargazers
							li.stargazer
								a.icon-anchor(href='/' + stargazer.screenName, title= '@' + stargazer.screenName)
									img.icon(src=stargazer.iconImageUrl, alt='icon')
			
			if login
				form.reply-form(role='form')
					div.me-icon-area
						img.me-icon(src=me.iconImageUrl, alt='icon')
					div.main
						textarea(name='text', placeholder='この投稿に返信...', role='textbox', aria-multiline)= '@' + status.user.screenName + ' '
						div.design-allow(role='presentation')
						div.image-attacher
							p
								i.fa.fa-picture-o
							input(name='image', type='file', accept='image/*')
						input(name='in-reply-to-status-id', type='hidden', value=status.id)
						input.submit-button(type='submit', value!='&#xf112; Reply', role='button')
						div.image-preview
			
			aside.replies(itemprop='comment')
				ol.statuses
					if status.replies.length > 0 && status.replies[0] != null
						each reply in status.replies
							li.status(title!= '#{reply.createdAt}&#x0A;'
									data-id= reply.id
									data-user-id= reply.user.id
									data-user-color= reply.user.color
									data-user-verified!= reply.user.isVerified.toString())
								article
									div.icon-area
										a.icon-anchor(href=config.url + '/' + reply.user.screenName, title= reply.user.comment != null ? reply.user.comment : '@' + reply.user.screenName, rel='icon')
											img.icon(src=reply.user.iconImageUrl, alt='icon')
									div.main
										header.header
											h2.name
												a(href=config.url + '/' + reply.user.screenName, target='_blank')= reply.user.name
											if reply.user.isVerified
												img.verified-icon(src='/resources/images/verified.png', alt='verified', title='認証済み')
											p.screen-name= '@' + reply.user.screenName
											p.created-at
												a.time-anchor(href=config.url + '/' + reply.user.screenName + '/status/' + reply.id, itemprop='url')
													time(datetime=reply.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= reply.createdAt
										div.content
											div.text
												p!= textParser(reply.text)
											if reply.isImageAttached
												img.image(src=reply.imageUrls[0], alt='image')
